// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Spydersoft.TechRadar.Data.Api.Data;

#nullable disable

namespace Spydersoft.TechRadar.Data.Api.Migrations
{
    [DbContext(typeof(TechRadarContext))]
    partial class TechRadarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("audit_date_time");

                    b.Property<string>("KeyValues")
                        .HasColumnType("text")
                        .HasColumnName("key_values");

                    b.Property<string>("NewValues")
                        .HasColumnType("text")
                        .HasColumnName("new_values");

                    b.Property<string>("OldValues")
                        .HasColumnType("text")
                        .HasColumnName("old_values");

                    b.Property<string>("TableName")
                        .HasColumnType("text")
                        .HasColumnName("table_name");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_audits");

                    b.ToTable("audits", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.Quadrant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<int>("RadarId")
                        .HasColumnType("integer")
                        .HasColumnName("radar_id");

                    b.HasKey("Id")
                        .HasName("pk_quadrants");

                    b.ToTable("quadrants", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.Radar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("background_color");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("GridlineColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gridline_color");

                    b.Property<string>("InactiveColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inactive_color");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_radars");

                    b.ToTable("radars", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.RadarArc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<int>("RadarId")
                        .HasColumnType("integer")
                        .HasColumnName("radar_id");

                    b.Property<int>("Radius")
                        .HasColumnType("integer")
                        .HasColumnName("radius");

                    b.HasKey("Id")
                        .HasName("pk_radar_arcs");

                    b.ToTable("radar_arcs", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.RadarItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArcId")
                        .HasColumnType("integer")
                        .HasColumnName("arc_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated");

                    b.Property<string>("LegendKey")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("legend_key");

                    b.Property<int>("MovementDirection")
                        .HasColumnType("integer")
                        .HasColumnName("movement_direction");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.Property<int>("QuadrantId")
                        .HasColumnType("integer")
                        .HasColumnName("quadrant_id");

                    b.Property<int>("RadarId")
                        .HasColumnType("integer")
                        .HasColumnName("radar_id");

                    b.Property<int>("Rank")
                        .HasColumnType("integer")
                        .HasColumnName("rank");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_radar_items");

                    b.ToTable("radar_items", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.RadarItemNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<int>("RadarItemId")
                        .HasColumnType("integer")
                        .HasColumnName("radar_item_id");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_radar_item_notes");

                    b.ToTable("radar_item_notes", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.RadarItemTag", b =>
                {
                    b.Property<int>("RadarItemId")
                        .HasColumnType("integer")
                        .HasColumnName("radar_item_id");

                    b.Property<int>("TagId")
                        .HasColumnType("integer")
                        .HasColumnName("tag_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("RadarItemId", "TagId")
                        .HasName("pk_radar_item_tags");

                    b.HasIndex("TagId")
                        .HasDatabaseName("ix_radar_item_tags_tag_id");

                    b.ToTable("radar_item_tags", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("RadarId")
                        .HasColumnType("integer")
                        .HasColumnName("radar_id");

                    b.HasKey("Id")
                        .HasName("pk_tags");

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.RadarItemTag", b =>
                {
                    b.HasOne("Spydersoft.TechRadar.Data.Api.Data.RadarItem", "RadarItem")
                        .WithMany("Tags")
                        .HasForeignKey("RadarItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_radar_item_tags_radar_items_radar_item_id");

                    b.HasOne("Spydersoft.TechRadar.Data.Api.Data.Tag", "Tag")
                        .WithMany("Tags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_radar_item_tags_tags_tag_id");

                    b.Navigation("RadarItem");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.RadarItem", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Spydersoft.TechRadar.Data.Api.Data.Tag", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
